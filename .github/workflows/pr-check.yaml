#
# Copyright (C) 2024 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: pr-check

on: [pull_request]

jobs:
  build:
    name: Build / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: "windows-2022"
          - os: "ubuntu-24.04"
    timeout-minutes: 20
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Get yarn cache directory path (Windows)
        if: ${{ matrix.os=='windows-2022' }}
        id: yarn-cache-dir-path-windows
        run: echo "dir=$(yarn cache dir)" >> ${env:GITHUB_OUTPUT}

      - name: Get yarn cache directory path (Linux)
        if: ${{ matrix.os=='ubuntu-24.04' }}
        id: yarn-cache-dir-path-unix
        run: echo "dir=$(yarn cache dir)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v4
        if: ${{ matrix.os=='windows-2022' }}
        id: yarn-cache-windows
        with:
          path: ${{ steps.yarn-cache-dir-path-windows.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/cache@v4
        if: ${{ matrix.os=='ubuntu-24.04' }}
        id: yarn-cache-unix
        with:
          path: ${{ steps.yarn-cache-dir-path-unix.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: yarn
        run: |
          yarn --frozen-lockfile --network-timeout 180000

        # skip formatter on windows
      - name: Formatter
        if: ${{ matrix.os=='ubuntu-24.04' }}
        run: yarn format:check

      - name: Linter
        run: yarn lint:check

#      - name: Run Tests
#        run: yarn test

      - name: Run Build
        run: yarn build
        timeout-minutes: 40
